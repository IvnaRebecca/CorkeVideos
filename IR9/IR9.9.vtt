WEBVTT
Kind: captions
Language: en-GB

00:00:03.810 --> 00:00:08.620
Nós vamos falar agora sobre a forma da
matriz Jacobiana Um robô manipulador tem

00:00:08.620 --> 00:00:12.959
em geral N juntas, N pode ser um número
pequeno, o robô pode ter apenas duas

00:00:12.959 --> 00:00:17.150
juntas. O robô pode ter 100 juntas.
Eu quero entender qual o efeito do

00:00:17.150 --> 00:00:22.230
número de juntas na forma do robô
manipulador de matriz Jacobiana, pois a Jacobiana

00:00:22.230 --> 00:00:28.849
tem uma coluna por junta. Assim, um robô com N juntas
tem o manipulador de matriz jacobiana com N colunas.

00:00:28.849 --> 00:00:34.090
A Jacobiana tem uma linha para cada elemento
do vetor da velocidade espacial. Então, para movimentos

00:00:34.090 --> 00:00:39.080
em três dimensões, o vetor da velocidade
espacial tem 6 elementos - 3 para a velocidade

00:00:39.080 --> 00:00:43.800
de translação e 3 para a velocidade angular. E,
isso significa que a matriz Jacobiana sempre tem

00:00:43.800 --> 00:00:48.970
seis linhas. Então a matriz Jacobiana do robô
manipulador é uma matriz 6 x N.

00:00:48.970 --> 00:00:53.980
Esse robô tem apenas 4 juntas e nós chamamos
de um robô sub-atuado. E, isso quer dizer quer

00:00:53.980 --> 00:00:59.530
seu espaço de tarefas não cobre todo o conjunto
SE3. Ainda que o efetuador alcance

00:00:59.530 --> 00:01:05.800
todas as posições dentro dos limites de seu espaço
de trabalho., não é capaz de alcançar todas as orientações possíveis.

00:01:05.800 --> 00:01:10.359
Então, por exemplo, quando o robô em uma configuração
assim, pode ajustar a orientação da

00:01:10.359 --> 00:01:14.229
garra dessa forma. Mas, é impossível para ele
ajustar a orientação da garra

00:01:14.229 --> 00:01:17.869
nessa direção ou nessa direção.

00:01:18.640 --> 00:01:23.740
Consideremos o caso de um robô com apenas
4 juntas. Isso geralmente é chamado de um

00:01:23.740 --> 00:01:29.890
sistema robótico sub-atuado. Nesse caso,
o robô Jacobiano tem 6 linhas e 4 colunas.

00:01:29.890 --> 00:01:35.060
O Jacobiano não é quadrado, portanto,
não podemos inverter. Mas isso não é necessariamente

00:01:35.060 --> 00:01:40.689
um problema. Um robô assim é incapaz de
rotacionar a ferramenta no eixo x ou y. É

00:01:40.689 --> 00:01:45.880
a forma que foi construído. Não pode rotacionar
a ferramenta dessa forma. Então, podemos excluir

00:01:45.880 --> 00:01:51.679
esses elementos da velocidade espacial do robô.
Já que não podemos controlar a velocidade em torno

00:01:51.679 --> 00:01:53.209
desses eixos, vamos apenas removê-los.

00:01:53.209 --> 00:01:58.469
Se eu fizer isso, então eu devo remover as
linhas correspondentes na matriz Jacobiana.

00:01:58.469 --> 00:02:04.969
E, o resultado agora é um sistema 4 x 4. E
agora, a matriz Jacobiana é uma matriz inversível. Dada

00:02:04.969 --> 00:02:09.850
a velocidade espacial desejada, é um vetor
de velocidade espacial menor agora. Nós podemos

00:02:09.850 --> 00:02:14.319
calcular as velocidades angulares. Precisamos
obter essa velocidade espacial.

00:02:14.319 --> 00:02:19.840
Temos aqui um robô que tem possivelmente 100 juntas.
Nesse caso, o manipulador Jacobiano é

00:02:19.840 --> 00:02:26.530
uma matriz 6 x 100. Não é quadrada e não podemos
invertê-la. Nós podemos calcular algo

00:02:26.530 --> 00:02:31.260
chamado de pseudo-inversa e é geralmente
denotada pelo símbolo mais.

00:02:31.260 --> 00:02:36.239
A pseudo-inversa é calculada dessa forma.
Isso parece bastante simples até você

00:02:36.239 --> 00:02:41.790
se lembrar que o termo aqui dentro
é em fato uma matriz 100 x 100 e precisamos

00:02:41.790 --> 00:02:47.750
inverter isso. E computacionalmente, isso não
é uma coisa simples de se fazer. Contudo, se usarmos

00:02:47.750 --> 00:02:52.769
essa pseudo-inversa, podemos escrever uma expressão
que relaciona a velocidade espacial desejada

00:02:52.769 --> 00:03:00.549
do efetuador do robô para a velocidade
requirida para cada uma de suas 100 juntas.

00:03:00.549 --> 00:03:04.819
Mas nós podemos fazer algo extra também no caso
de um robô desse - um robô com mais de

00:03:04.819 --> 00:03:11.349
de 6 juntas. Podemos adicionar esse termo aqui
e nos referimos a isso como o movimento de espaço nulo.

00:03:11.349 --> 00:03:16.599
É pré-multiplicado por essa expressão de matriz
aqui, o que o filtra com eficácia, assim

00:03:16.599 --> 00:03:21.980
esse movimento não afeta a posição do
efetuador do robô. Podemos usar esse movimento,

00:03:21.980 --> 00:03:25.730
que não afeta a posição do efetuador
para fazer coisas como mudar a forma

00:03:25.730 --> 00:03:31.239
do braço. Podemos também usar para fazer coisas 
como movera a junta do robô fora de seus limites em

00:03:31.239 --> 00:03:33.560
direção a parte do meio da sua área de trabalho.

00:03:33.560 --> 00:03:39.019
Então, usamos esse movimento de velocidade extra
da junta para mudar a forma do braço, mover juntas

00:03:39.019 --> 00:03:44.299
além de seus limites. Ao mesmo tempo sem alterar
a posição do efetuador. É um truque bem

00:03:44.299 --> 00:03:50.879
legal. Essa matriz N é chamada de matriz
Jacobiano do espaço nulo. É

00:03:50.879 --> 00:03:55.700
o conjunto de vetores que pré-multiplicados
pelo manipulador da matriz Jacobiana, dá um

00:03:55.700 --> 00:04:02.219
resultado de zero. Nesse caso em particular, se
o robô tiver 100 juntas, então o espaço nulo

00:04:02.219 --> 00:04:11.260
seria a dimensão 94. Isto é 100 menos
6. Então, N seria uma matriz de 6 x 94 elementos

00:04:11.260 --> 00:04:16.420
Vou importar o modelo de um redundante
robô que se move em 3D e esse é o modelo

00:04:16.420 --> 00:04:21.940
hyper 3D. E, vou pedir um robô
com 20 articulações. Para ilustrar, por exemplo

00:04:21.940 --> 00:04:26.190
Preciso escolher um conjunto de ângulos de articulação. eu
precisa escolher 20 números. Eu sei que se

00:04:26.190 --> 00:04:29.340
eles são todos iguais a zero, o robô irá
estar em uma singularidade.

00:04:29.340 --> 00:04:34.370
Então, o que vou fazer é escolher 20
números aleatórios. Vou usar o MATLAB para contruir

00:04:34.370 --> 00:04:39.650
uma função rand. Então, este é o meu ângulo de articulação,
um vetor de 20 números aleatórios no intervalo de

00:04:39.650 --> 00:04:46.039
0 à 1. E eu posso plotar esta configuração de uma 
articulação em particular para um robô e isto é

00:04:46.039 --> 00:04:50.630
o que parece. Se eu posso ter um bit
de vizualização ao redor, podemos ver que 

00:04:50.630 --> 00:04:55.139
a ponta ligeiramente pra cima e tem alguns
curvas e torções nele.

00:04:55.139 --> 00:05:00.520
Agora que tenho o conjunto de ângulos de articulações e
eu tenho um modelo de robô, posso calcular a matrix

00:05:00.520 --> 00:05:05.830
Jacobiana. E vimos como fazer isso para
muitos outros tipos de robôs. Eu uso o método 

00:05:05.830 --> 00:05:11.430
Jacobiano e eu passo no conjunto de ângulos articulares.
E, esta é a matrix Jacobiana. Podemos ver

00:05:11.430 --> 00:05:16.250
que tem 6 linhas e 20 colunas
porque existem 20 articulações.

00:05:16.250 --> 00:05:20.639
Se eu tentar inverter esta matriz, vou
obter um erro porque a matriz não é

00:05:20.639 --> 00:05:24.910
quadrada. O MATLAB está me dizendo que eu não posso fazer isso
mas posso calcular o pseudo-inverso. Que

00:05:24.910 --> 00:05:31.000
é calculado usando o MATLAB na construção da 
função pinv e passar na matriz Jacobiana.

00:05:31.000 --> 00:05:36.789
E, este é o resultado da pseudo-inversa.
E podemos ver o que temos no espaço de trabalho

00:05:36.789 --> 00:05:41.660
agora uma matriz 20 x 6, a pseudo-inversa de
a matriz Jacobiana.

00:05:41.660 --> 00:05:46.889
Agora, falamos sobre o movimento do espaço nulo.
E, a fim de calcular o movimento do espaço nulo,

00:05:46.889 --> 00:05:52.749
precisamos calcular o espaço nulo da matriz 
Jacobiano e o MATLAB têm a função de fazer isso.

00:05:52.750 --> 00:05:58.620
É a função nula, aqui a matriz 
Jacobiano e aqui está a matriz de espaço nulo.

00:05:58.620 --> 00:06:04.669
A matriz de espaço nulo tem 20 linhas e apenas
14 colunas. 14 vem de 20, que é o

00:06:04.669 --> 00:06:09.879
número de colunas  na matriz original 
menos 6. E 6 é a classificação da matriz

00:06:09.879 --> 00:06:15.520
Jacobiana. Esse é o número de colunas na matriz Jacobiana. 
Então, havia 6 únicas

00:06:15.520 --> 00:06:21.699
colunas e 14 colunas que existe
no espaço nulo daquela matriz. 14 mais

00:06:21.699 --> 00:06:25.610
6 é igual a 20, o número original de colunas.

00:06:25.610 --> 00:06:29.400
Vamos resumir algumas das diferentes formas
que uma matriz Jacobiana pode ter. Para

00:06:29.400 --> 00:06:33.780
o caso de um robô com 6 articulações, dizemos
que o robô está totalmente acionado. A matriz

00:06:33.780 --> 00:06:39.270
Jacobinana será quadrada 6 x 6. E um robô
com 6 juntas é capaz de acessar totalmente 

00:06:39.270 --> 00:06:44.210
as posições dentro de SE3.
Isso significa que em qualquer posição e qualquer

00:06:44.210 --> 00:06:50.090
orientação. Para o caso de um robô com
menos de 6 juntas, que chamamos de

00:06:50.090 --> 00:06:56.990
robô sub-atuado,a matriz Jacobiana será 6 x N. 
Ele terá mais linhas do que colunas.

00:06:56.990 --> 00:07:02.460
Isso significa que o robô não pode acessar todos
possíveis poses dentro de um SE3. E, em ordem

00:07:02.470 --> 00:07:07.509
usar a matriz para fins de controle,
precisamos corrigir isso e fazemos isso 

00:07:07.509 --> 00:07:12.509
removendo alguns graus de liberdade espaciais.
Eliminamos algumas linhas na matriz Jacobiana

00:07:12.509 --> 00:07:19.210
para que se torne uma matriz 5 x 5 ou 4 x 4  
que é então invertível. Dentro do estojo

00:07:19.210 --> 00:07:24.550
de um robô com mais de 6 articulações, que
nós nos referimos como um robô super acionado, a

00:07:24.550 --> 00:07:29.819
matriz jacobiana tem mais colunas do que tem
linhas. É uma matriz 6 x N.

00:07:29.819 --> 00:07:34.930
Para usar a matriz Jacobiana para controle,
tomamos seu pseudo-inverso. A

00:07:34.930 --> 00:07:39.190
grande vantagem de um robô como este é que
podemos pensar em ter juntas sobressalentes e

00:07:39.190 --> 00:07:43.629
podemos usar algumas dessas juntas sobressalentes para fazer
o que chamamos de movimento de espaço nulo. E enquanto

00:07:43.629 --> 00:07:47.780
mantemos a pose ineficaz constante, nós
podemos ajustar todas as juntas para mudar o

00:07:47.780 --> 00:07:51.619
formato do braço ou afaste as articulações
limites de movimento.

