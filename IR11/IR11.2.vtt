WEBVTT
Kind: captions
Language: pt-BR

00:00:03.340 --> 00:00:07.830
Vamos retornar ao manipulador de robô simples 
de duas ligações que examinamos muito, muito antes

00:00:07.830 --> 00:00:12.090
no curso. Quando olhamos pela primeira vez,
estávamos interessados na cinemática, que é

00:00:12.090 --> 00:00:17.400
olhar a relação entre os ângulos da articulação, 
Q1 e Q2 e a posição e orientação

00:00:17.400 --> 00:00:20.530
do efetuador.
Agora o que vamos fazer é considerar

00:00:20.530 --> 00:00:25.440
que essas ligações têm massas, então 
coloquei os simbolos do centro de massa

00:00:25.440 --> 00:00:30.600
de cada uma dessas ligações. Então, pensamos sobre
como isso funciona mecanicamente na prática: Cada

00:00:30.600 --> 00:00:35.620
ligação deve oferecer suporte a todas as outras ligações
que estão além dele e cada ligação é claro,

00:00:35.620 --> 00:00:38.600
então suportada por todas as ligações
que estão antes dele.

00:00:38.600 --> 00:00:42.620
Portanto, há mecanicamente uma conexão 
entre as ligações, e o peso de uma ligação tem que

00:00:42.620 --> 00:00:48.090
nascer pela ligação anterior e pela ligação anterior 
e assim por diante. Cada ligação, então exerce

00:00:48.090 --> 00:00:51.850
uma força e um momento em suas ligações vizinhas.

00:00:51.850 --> 00:00:55.879
Portanto, uma maneira realmente útil de considerar 
as forças e os momentos que atuam em cada uma dessas

00:00:55.879 --> 00:01:00.870
ligações é desenhar um diagrama de corpo livre. 
O que fazemos é desconectar as diferentes ligações

00:01:00.870 --> 00:01:04.559
e olhar para eles individualmente, 
elas são corpos livres.

00:01:04.559 --> 00:01:09.380
Cada ligação tem uma massa e a gravidade vai 
agir sobre essa massa com uma força para baixo

00:01:09.380 --> 00:01:13.399
A base do robô vai exercer uma força vertical
para cima para segurar a ligação vermelha

00:01:13.399 --> 00:01:17.889
para impedi-la de cair e a ligação verde
exercerá uma força para baixo

00:01:17.889 --> 00:01:21.049
na extremidade da ligação vermelha 
devido ao seu próprio peso.

00:01:21.049 --> 00:01:24.420
Olhe agora para a ligação verde, haverá uma 
força para cima aqui, que é igual e

00:01:24.420 --> 00:01:28.899
oposta a força para baixo da ligação vermelha.
Está é a terceira lei de Newton. Então, se houver

00:01:28.899 --> 00:01:32.649
uma força para baixo na ligação vermelha é o
peso da ligação verde e há uma força para cima

00:01:32.649 --> 00:01:38.099
na ligação verde que é exercida pela 
ligação vermelha para mantê-la ativa

00:01:38.099 --> 00:01:42.829
Agora há um momento fornecido pelo motor 
que aciona a articulação um. Ele está exercendo

00:01:42.829 --> 00:01:48.239
um torque para parar a rotada da ligação vermelha.
E da mesma forma, há um torque aplicado a

00:01:48.239 --> 00:01:53.779
ligação verde pelo motor da articulação dois para
impedir a ligação verde gire. E então, há

00:01:53.779 --> 00:02:00.399
um torque de reação, torque igual e oposto
daquele que é aplicado a ligação vermelha.

00:02:00.640 --> 00:02:06.899
Então aqui vemos, todas as forças e momentos 
que estão agindo em cada um das ligações de um robô.

00:02:06.899 --> 00:02:11.969
Essas forças e momentos dependem da posição de 
cada ligação, dependem da velocidade de uma ligação

00:02:11.969 --> 00:02:16.969
e a aceleração da ligação e, claro, 
elas também dependem da gravidade.

00:02:16.969 --> 00:02:21.980
Essas forças e momentos também dependem dos 
parâmetros da ligação; a massa real de uma ligação,

00:02:21.980 --> 00:02:27.260
sua inércia, seu comprimento e assim pro diante. Então, 
vamos dar uma olhada em alguns desses parâmetros de ligação.

00:02:27.640 --> 00:02:32.079
Em parâmetros cinemáticos, apresentamos muito 
antes no curso, temos o comprimento da ligação

00:02:32.079 --> 00:02:40.299
Neste caso, o comprimento A1 do eixo
da junta um ao eixo da junta dois.

00:02:40.299 --> 00:02:43.430
E da mesma forma, temos o comprimento da ligação dois

00:02:43.430 --> 00:02:48.150
Nós introduzimos o sistema de coordenadas de ligações aqui.
O sistema de coordenadas um é anexado ao final

00:02:48.150 --> 00:02:53.879
da ligação um e o sistema de coordenadas dois é 
anexado ao sistema de coordenadas da ligação dois.

00:02:53.879 --> 00:02:57.939
E observamos os sistemas de coordenadas de ligação novamente,
muito antes quando estávamos considerando a cinemática do

00:02:57.939 --> 00:02:59.959
manipulador de ligação serial.

00:02:59.959 --> 00:03:05.010
Também podemos descrever a posição do centro de massa 
em relação ao sistema coordenada de uma ligação.

00:03:05.010 --> 00:03:11.140
frame. In this case, it is a displacement
of C1 in the negative X1 direction. And we

00:03:11.140 --> 00:03:15.280
also have a mass associated with a link that's
the mass M1.

00:03:15.280 --> 00:03:20.390
Then we also have an inertia. This is the
inertia of the link with respect to its centre

00:03:20.390 --> 00:03:26.189
of mass and we can do the same thing for link
two, the distance from the link two coordinate

00:03:26.189 --> 00:03:32.449
frame to its centre of mass and the inertia
of link two with respect to its centre of mass.

00:03:32.450 --> 00:03:37.019
So we have now quite a number of parameters
associated with each of the links. For each

00:03:37.019 --> 00:03:41.689
link, we have a mass, we have a centre of
mass which in the general case would be a

00:03:41.689 --> 00:03:47.920
vector described by three numbers and we have
an inertia matrix. This is a 3x3 matrix and

00:03:47.920 --> 00:03:54.160
if we consider the inertia with respect to
the centre of mass, that 3x3 is a symmetric matrix.

00:03:54.160 --> 00:03:58.940
Now, a symmetric matrix, instead of having
nine unique elements, its got only six unique

00:03:58.950 --> 00:04:03.870
elements. In total, we have ten parameters
to describe the dynamics of each link. We

00:04:03.870 --> 00:04:08.450
have one mass, we have three translations
to describe the position of the centre of

00:04:08.450 --> 00:04:14.159
mass with respect to the link coordinate frame,
and we have six unique elements of the symmetric

00:04:14.159 --> 00:04:17.720
inertia matrix, with respect to the centre
of mass.

00:04:17.720 --> 00:04:24.180
So for link number one, those parameters are
M1, the centre of mass is negative C1 in the

00:04:24.180 --> 00:04:29.020
X direction. The other two elements are zero,
the vector R1, describes the position of the

00:04:29.020 --> 00:04:34.920
centre of mass. And in this case, it's negative
C1 and the Y and Z components are equal to zero.

00:04:34.920 --> 00:04:40.480
And we have the inertia matrix which has only
got one element and that is the inertia about

00:04:40.490 --> 00:04:45.680
the Z axis. Now in this case, the Z axis is
coming at us out of the page. So we have only

00:04:45.680 --> 00:04:48.330
one finite element that's IZZ1.

00:04:48.330 --> 00:04:54.500
For link two, it looks somewhat similar. These
are the dynamic parameters of each of the

00:04:54.500 --> 00:04:58.900
links, sometimes referred to as the inertial
parameters of the links. When it comes to

00:04:58.900 --> 00:05:02.479
describing the dynamics of moving bodies,
there are number of different approaches that

00:05:02.479 --> 00:05:07.900
we can take, one of the most common of course
is Newton's second law, F = ma which relates

00:05:07.900 --> 00:05:13.860
the force applied to the body to the acceleration
that experiences as a function of its mass.

00:05:13.860 --> 00:05:18.150
For a rotating body, we can use Euler's equation
which relates the torque applied to its body

00:05:18.150 --> 00:05:23.840
given by the symbol tau to its rotational
inertia, J, it's angular rate, Omega, and

00:05:23.840 --> 00:05:26.190
its angular acceleration Omega dot.

00:05:26.190 --> 00:05:31.349
A quite different approach is Lagrange's equation,
which relates the kinetic, and potential energy

00:05:31.349 --> 00:05:38.440
of a body to the derivatives of the Lagrangian
term, T minus V, and the derivatives of Lagrangian

00:05:38.440 --> 00:05:44.289
with respect to the generalized coordinates
and the generalized velocities of the bodies

00:05:44.289 --> 00:05:45.720
in the mechanism.

00:05:45.720 --> 00:05:50.210
We can use any of these approaches to analyze
the dynamics of a serial link manipulator

00:05:50.210 --> 00:05:55.590
but in this lecture, we're going to consider
the Newton-Euler method. This is a combination

00:05:55.590 --> 00:06:02.020
of Newton's law to describe translational motion and Euler's equation to describe the rotational motion.

00:06:02.020 --> 00:06:07.310
A very simple and elegant approach to determining
the dynamic motion of a serial link manipulator

00:06:07.310 --> 00:06:11.889
is what's called the recursive Newton-Euler
algorithm. And I'm not going to go into all

00:06:11.889 --> 00:06:16.080
of the details here, you find it in many,
many textbooks but what I'm want to do is

00:06:16.080 --> 00:06:19.060
give you an intuition for how it works.

00:06:19.060 --> 00:06:24.129
And the first step is to determine the translational
and rotational velocity and acceleration for

00:06:24.129 --> 00:06:29.180
the center of mass of each of the links. Use
Newton's law for the translational motion

00:06:29.180 --> 00:06:32.639
and we use Euler's equation for the rotational
motion.

00:06:32.639 --> 00:06:37.039
We start at the base of the robot and we work
outwards, determining the translational and

00:06:37.039 --> 00:06:42.759
angular velocity for the centre of mass of each
link in turn. Once we get to the end of the

00:06:42.759 --> 00:06:48.009
robot, we then work our way back inwards and
then we determine the force and moment that

00:06:48.009 --> 00:06:53.939
each link exerts on the link that's closer
towards the base of the robot. This method

00:06:53.939 --> 00:06:57.479
is computationally elegant and very, very
efficient.

00:06:57.479 --> 00:07:02.250
I'm going to create a two-link robot in MATLAB.
To do that, I'm going to use toolbox script

00:07:02.250 --> 00:07:09.229
mdl_twolink and that will create in the MATLAB
workspace a robot object called two-link.

00:07:09.229 --> 00:07:15.689
This is an object that has great number of methods and properties and we'll start to explore some of these.

00:07:15.689 --> 00:07:20.270
One of the first ones we're going to look
at is the plot method. So for the robot object

00:07:20.270 --> 00:07:25.169
two-link, we’re going to invoke the plot
method so that’s dot plot invokes the plot

00:07:25.169 --> 00:07:33.720
method on that object. And I'm going to plot
it for Q1 equal to zero, and Q2 equal to zero.

00:07:33.720 --> 00:07:38.360
And here we see the robot manipulator. Unlike
the one we looked at previously which operated

00:07:38.360 --> 00:07:46.669
in the XY plane, we can see that this two-link
robot is operating in the XZ plane. So gravitational

00:07:46.669 --> 00:07:52.060
acceleration which is in the Z direction is
acting on the centre of mass of each of the

00:07:52.060 --> 00:07:56.289
links of this robot and will tend to pull
it down to make it collapse.

00:07:56.289 --> 00:08:03.319
And we can use the recursive Newton-Euler
equation and we can, which is the rne method

00:08:03.319 --> 00:08:07.979
for recursive Newton-Euler. And I can ask,
what are the torques on this robot if the

00:08:07.979 --> 00:08:12.229
joint angles are both equal to zero? So that's
a situation I've just plotted.

00:08:12.229 --> 00:08:16.969
And let's say the joints are not moving at
all, so they've got zero velocity each and

00:08:16.969 --> 00:08:22.509
the joints are also not accelerating. So they've
each got acceleration of zero.

00:08:22.509 --> 00:08:27.689
It says that the torque on the first joint
on Q1 is necessary to hold it in this position

00:08:27.689 --> 00:08:35.210
is 19.62 Newton meters and the torque on the
second joint is 4.9 Newton meters. This makes

00:08:35.210 --> 00:08:39.830
intuitive sense to us. The torque on the shoulder
joint is going to be greater than the torque

00:08:39.830 --> 00:08:45.100
on the elbow joint because the shoulder has
to hold up the upper arm and the lower arm,

00:08:45.100 --> 00:08:50.940
where as the elbow joint only has to hold
up the lower part of the arm.

00:08:50.940 --> 00:08:55.800
What we don't have a handle on are the signs
of these two torques, which way are they acting.

00:08:55.800 --> 00:09:03.790
So a good way to see that is to re-plot the
robot using a different option which is jvek.

00:09:03.790 --> 00:09:07.900
What this shows is the access of rotation
of each joint.

00:09:07.900 --> 00:09:13.170
So if we remember our right hand rule, in
order to understand the direction of a positive

00:09:13.170 --> 00:09:18.890
torque, what we do is grab the axis with our
right hand, point our thumb in the direction

00:09:18.890 --> 00:09:25.130
of the arrowhead and curl our fingers around the vector to indicate the direction of positive rotation.

00:09:25.130 --> 00:09:31.840
What we can see here then is that a positive
torque of 19.6 acting on a shoulder joint

00:09:31.840 --> 00:09:37.610
is going to be a torque that's trying to lift
the robot arm up, which is exactly what we

00:09:37.610 --> 00:09:40.940
would expect and similarly for joint two.

00:09:40.940 --> 00:09:46.590
So the recursive Newton-Euler algorithm has
given us the torques that are required for

00:09:46.590 --> 00:09:52.540
the robot to stay in this particular configuration
with both its joint angles equal to zero and

00:09:52.540 --> 00:09:57.770
with zero joint velocity and with zero joint
acceleration. These are the torques that are

00:09:57.770 --> 00:10:01.480
required for the robot to be in this configuration
and not move.

