WEBVTT
Kind: captions
Language: pt-BR 

00:00:03.470 --> 00:00:08.069
Agora nós vamos olhar para um robô com seis
juntas ou seis graus de liberdade e este

00:00:08.069 --> 00:00:14.680
é um robô que se move em três dimensões.
Vou começar carregando um modelo do

00:00:14.680 --> 00:00:20.650
robô Puma 560 e este cria várias variáveis
no espaço de trabalho. A mais importante

00:00:20.650 --> 00:00:26.650
dessas é a variável P560. Esta é um objeto
MATLAB que representa um robô. Existem

00:00:26.650 --> 00:00:32.430
algumas outras variáveis e estas representam
configurações particulares do ângulo da junta. QZ

00:00:32.430 --> 00:00:38.020
por exemplo, é um vetor de comprimento seis
preenchido com zeros e representa o conjunto de

00:00:38.020 --> 00:00:41.500
ângulos de junta zero para este robô em particular.

00:00:41.500 --> 00:00:46.000
Os objetos do robô possuem vários métodos.
Um dos métodos, o método plot, nos permite

00:00:46.000 --> 00:00:51.570
ver a configuração de um robô, então aqui está
aquele robô em particular quando todos os

00:00:51.570 --> 00:00:58.180
ângulos de junta são iguais a zero. Posso ver
isso de vários pontos de vista diferentes,

00:00:58.180 --> 00:01:03.430
vendo o robô e também o sistema de
coordenadas do efetuador do robô mostrando

00:01:03.430 --> 00:01:08.840
aqui os eixos X, Y e Z do efetuador
do robô.

00:01:08.840 --> 00:01:12.900
Agora estamos falando sobre cinemática inversa. 
Então eu quero que o robô vá para uma determinada

00:01:12.900 --> 00:01:18.100
pose e eu vou definir isso. Em primeiro lugar,
eu vou definir a componente translational

00:01:18.100 --> 00:01:24.540
usando a função transl e eu quero uma
coordenada X de 0.6, uma coordenada Y

00:01:24.540 --> 00:01:31.190
de 0.1 e uma coordenada Z de 0. Agora
preciso dar alguma orientação. Eu faço

00:01:31.190 --> 00:01:38.020
isso especificando seus ângulos roll, pitch e yaw.
Eu quero que o ângulo roll seja 0, eu quero

00:01:38.020 --> 00:01:45.000
que o ângulo pitch seja 180 graus e eu quero que
o ângulo yaw seja 0 graus. Eu especifico

00:01:45.000 --> 00:01:52.490
que dei os ângulos em termos de unidades de graus.
E aqui está a matriz de transformação homogênea

00:01:52.490 --> 00:01:56.170
que representa a pose na qual estou interessado.

00:01:56.170 --> 00:02:02.780
Agora vamos dar uma olhada nessa pose em
particular. Posso sobrepor a pose na figura

00:02:02.780 --> 00:02:09.509
que contém o robô, para tal habilito o hold e eu agora
ploto aquela pose particular e então nós

00:02:09.509 --> 00:02:14.950
podemos ver o sistema de coordenadas que representa
esta pose. Podemos dar uma olhada por aqui.

00:02:14.950 --> 00:02:19.230
Portanto, a posição associada a esta pose é a
origem deste novo sistema de coordenadas azul.

00:02:19.230 --> 00:02:27.340
E podemos ver a orientação deste novo sistema
em termos de seus eixos X, Y e Z.

00:02:27.340 --> 00:02:32.770
Agora nosso trabalho é determinar os ângulos de junta
que o robô precisa adotar para que seu efetuador

00:02:32.770 --> 00:02:39.120
alinhe-se com a nova pose desejada. Faça isso
usando cinemática inversa. Existe um método

00:02:39.120 --> 00:02:43.810
de cinemática inversa associado ao objeto do
robô e o nome do método é ikine, que

00:02:43.810 --> 00:02:49.459
é a abreviatura para cinemática inversa, seis,
para um robô de seis graus de liberdade e S porque

00:02:49.459 --> 00:02:56.239
tem um punho esférico. E o único argumento que
passo é T, a transformação homogênea

00:02:56.239 --> 00:02:59.060
representando a pose desejada.

00:02:59.060 --> 00:03:03.500
O resultado é o conjunto de ângulos de junta que,
se o robô adotasse esses ângulos, ele

00:03:03.500 --> 00:03:09.680
alcançaria a pose. Bem, vamos testar isso. Podemos
mover nosso robô para este conjunto de

00:03:09.680 --> 00:03:15.030
ângulos de junta que nós acabamos de calcular e podemos
ver aqui que o robô definitivamente se moveu.

00:03:15.030 --> 00:03:18.849
Agora vamos olhar aqui em volta e ver o
que aconteceu. Podemos ver que o centro

00:03:18.849 --> 00:03:23.379
do efetuador está alinhado com o
centro desse novo sistema de coordenadas que

00:03:23.379 --> 00:03:29.840
introduzimos e podemos ver que os eixos X, Y
e Z do efetuador do robô estão

00:03:29.840 --> 00:03:37.069
alinhados com os eixos X, Y e Z do sistema azul
que acabamos de apresentar. Realmente é um pouco

00:03:37.069 --> 00:03:43.569
difícil determinar a configuração deste robô 
em particular neste gráfico de bonecos.

00:03:43.569 --> 00:03:48.239
É uma configuração para canhotos
ou destros. É realmente

00:03:48.239 --> 00:03:53.940
um pouco difícil de dizer, no entanto há
uma forma melhor de olhar para o robô, e é

00:03:53.940 --> 00:04:00.110
usando o método plot3D. Leva um
momentinho para começar na primeira vez

00:04:00.110 --> 00:04:07.269
que você executa porque precisa carregar alguns
modelos CAD detalhados do robô na área de trabalho.

00:04:07.269 --> 00:04:15.280
O que vemos aqui é uma imagem lindamente renderizada 
do robô Puma 560 e é bastante

00:04:15.280 --> 00:04:21.449
claro que o robô está numa configuração canhota
e a orientação de sua garra é para

00:04:21.449 --> 00:04:27.630
baixo, basicamente em uma configuração onde
ele pode pegar coisas de uma mesa na horizontal.

00:04:27.630 --> 00:04:32.180
Agora nós podemos estar interessados em colocar
o robô em uma confguração diferente. Podemos

00:04:32.180 --> 00:04:38.240
fazer isso recalculando a cinemática inversa,
mas dessa vez iremos passar uma opção

00:04:38.240 --> 00:04:44.270
R, que está pedindo pelos ângulos das juntas
que correspondem a configuração destra.

00:04:44.270 --> 00:04:48.990
Aqui está o grupo de ângulos de junta e
podemos plotá-los e ver que, agora, nosso robô

00:04:48.990 --> 00:04:54.770
está claramente numa configuração destra.

00:04:54.770 --> 00:05:00.650
Agora eu posso pedir para ele ficar em uma
configuração destra com o cotovelo para baixo em

00:05:00.650 --> 00:05:06.340
vez de estar para cima, e passar a opção D para indicar
isso. Agora temos um grupo diferente de ângulos

00:05:06.340 --> 00:05:11.300
de juntas, você vê que eles diferem dos valores
mostrados acima. Podemos plotar isso e

00:05:11.300 --> 00:05:16.400
ver que nosso robô agora está em uma configuração
destra mas com o cotovelo para baixo e

00:05:16.400 --> 00:05:24.690
o pulso está em uma pose muito, muito estranha.
Parece um pouco esquisito. Eu também posso pedir

00:05:24.690 --> 00:05:32.800
para o robô ficar em uma configuração canhota
com o cotovelo para baixo e eu posso plotar isso

00:05:32.800 --> 00:05:37.360
e vai parecer com algo desse tipo...

00:05:37.360 --> 00:05:41.720
O que vimos para este robô de seis graus de liberdade
que se move em três dimensões, é que

00:05:41.720 --> 00:05:48.110
existem de fato oito soluções para qualquer
pose particular do efetuador. Há uma solução

00:05:48.110 --> 00:05:53.759
onde o robô está ou em uma configuração canhota
ou destra, há soluções onde o

00:05:53.759 --> 00:05:57.419
cotovelo está para cima, isso significa que 
o cotovelo está mais alto que o ombro ou

00:05:57.419 --> 00:06:01.750
onde o cotovelo está para baixo; e é onde o cotovelo 
está abaixo do ombro e há soluções onde

00:06:01.750 --> 00:06:08.979
o pulso está ou não virado, existe
uma rotação de 180 graus na configuração do

00:06:08.979 --> 00:06:14.210
pulso. Para o caso do robô com uma
garra de dois dedos, como mostrado aqui,

00:06:14.210 --> 00:06:20.350
então uma rotação de 180 graus em torno do eixo
do pulso, deixa os dois dedos efetivamente

00:06:20.350 --> 00:06:26.229
na mesma configuração e não faz diferença
na hora de agarrar um objeto, pegá-lo

00:06:26.229 --> 00:06:27.720
ou colocá-lo para baixo.

